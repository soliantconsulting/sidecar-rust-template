image:
  name: cimg/rust:1.85.0-node
  run-as-user: 0

definitions:
  caches:
    pnpm: $BITBUCKET_CLONE_DIR/.pnpm-store
    cargo-registry-index:
      key:
        files:
          - Cargo.lock
      path: /home/circleci/.cargo/registry/index
    cargo-registry-cache:
      key:
        files:
          - Cargo.lock
      path: /home/circleci/.cargo/registry/cache
    rust-target-debug:
      key:
        files:
          - Cargo.lock
      path: $BITBUCKET_CLONE_DIR/target-cache
    rust-target-release:
      key:
        files:
          - Cargo.lock
      path: $BITBUCKET_CLONE_DIR/target-cache
  steps:
    - step: &check
        name: Check
        runs-on:
          - 'self.hosted'
          - 'linux'
          - 'spot'
        script:
          - export HOME=/home/circleci
          - corepack enable
          - pnpm install
          - ./bitbucket/restore-target.sh
          - ./bitbucket/check.sh
          - ./bitbucket/save-target.sh
        caches:
          - pnpm
          - cargo-registry-index
          - cargo-registry-cache
          - rust-target-debug
    - step: &deploy
        runs-on:
          - 'self.hosted'
          - 'linux'
          - 'spot'
        oidc: true
        size: 2x
        caches:
          - pnpm
          - cargo-registry-index
          - cargo-registry-cache
          - rust-target-release
        script:
          - export HOME=/home/circleci
          # Configure OIDC
          - export AWS_REGION=us-east-1
          - export AWS_ROLE_ARN=arn:aws:iam::163620805665:role/sidecar-openid-connect-ro-BitbucketDeployRole52FEE1-c49Fm2YAr083
          - export AWS_WEB_IDENTITY_TOKEN_FILE=$(pwd)/web-identity-token
          - echo $BITBUCKET_STEP_OIDC_TOKEN > $(pwd)/web-identity-token
          # Install dependencies
          - npm install -g @ziglang/cli
          - corepack enable
          - pnpm install
          - curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          - cargo binstall cargo-lambda
          # Deploy
          - ./bitbucket/restore-target.sh
          - export SIDECAR_NAME={{ project-name | remove_first: "sidecar-" }}
          - ./bitbucket/deploy.sh $BITBUCKET_DEPLOYMENT_ENVIRONMENT
          - ./bitbucket/save-target.sh

pipelines:
  branches:
    main:
      - step: *check
      - step:
          <<: *deploy
          name: Deploy Staging
          deployment: staging
      - step:
          <<: *deploy
          name: Deploy Production
          deployment: production
          trigger: manual
  pull-requests:
    '**':
      - step: *check
